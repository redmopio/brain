[
  {
    "name_for_human": "redmop-records-api",
    "name_for_model": "redmop_records_api",
    "description_for_human": "This tool... ",
    "description_for_model": "This tool... ",
    "secrets_for_model": {
      "x-hasura-admin-secret": "secret"
    },
    "openapi-spec": {
      "openapi": "3.0.0",
      "info": {
        "description": "This OpenAPI specification is automatically generated by Hasura.",
        "title": "Rest Endpoints",
        "version": ""
      },
      "paths": {
        "/api/rest/v1/records": {
          "post": {
            "summary": "InsertRecord",
            "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation InsertRecord($data: records_insert_input!) {\n  insert_records_one(object: $data) {\n    id\n    location\n  }\n}\n```",
            "parameters": [
              {
                "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
                "in": "header",
                "name": "x-hasura-admin-secret",
                "schema": {
                  "type": "string"
                }
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "data": {
                        "$ref": "#/components/schemas/records_insert_input!"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Query parameters can also be provided in the request body as a JSON object",
              "required": true
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "insert_records_one": {
                          "description": "columns and relationships of \"records\"",
                          "nullable": true,
                          "properties": {
                            "id": {
                              "$ref": "#/components/schemas/uuid!"
                            },
                            "location": {
                              "nullable": true,
                              "title": "String",
                              "type": "string"
                            }
                          },
                          "title": "records",
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "description": "Responses for POST /api/rest/v1/records"
              }
            }
          }
        }
      },
      "components": {
        "schemas": {
          "jsonb": {
            "nullable": true,
            "title": "jsonb"
          },
          "timestamptz": {
            "nullable": true,
            "title": "timestamptz"
          },
          "uuid": {
            "nullable": true,
            "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
            "title": "uuid",
            "type": "string"
          },
          "records_insert_input!": {
            "description": "input type for inserting data into table \"records\"",
            "nullable": false,
            "properties": {
              "created_at": {
                "$ref": "#/components/schemas/timestamptz"
              },
              "id": {
                "$ref": "#/components/schemas/uuid"
              },
              "location": {
                "nullable": true,
                "title": "String",
                "type": "string"
              },
              "registered_by": {
                "nullable": true,
                "title": "String",
                "type": "string"
              },
              "sensor_data": {
                "nullable": true,
                "title": "String",
                "type": "string"
              },
              "sensor_metadata": {
                "$ref": "#/components/schemas/jsonb"
              },
              "sensor_name": {
                "nullable": true,
                "title": "String",
                "type": "string"
              },
              "sensor_variant": {
                "nullable": true,
                "title": "String",
                "type": "string"
              },
              "updated_at": {
                "$ref": "#/components/schemas/timestamptz"
              },
              "user": {
                "nullable": true,
                "title": "String",
                "type": "string"
              }
            },
            "title": "records_insert_input",
            "type": "object"
          },
          "uuid!": {
            "nullable": false,
            "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
            "title": "uuid",
            "type": "string"
          }
        }
      }
    }
  }
]
